1. Что такое сериализация/дессериализация?
Сериализация — это процесс преобразования объекта в последовательность байтов (или битов),
которая может быть сохранена в постоянной памяти (например, файле) или передана по сети.
Дессериализация — чтение объекта из файла, является обратным процессом, преобразующим последовательность байтов обратно в объект.
Она считывает сериализованные данные и воссоздает исходный объект.

2. Какая последовательность работы с потоком?
1) Открытие потока для чтения из файла, записи в файл и т.д.
2) Чтение/запись или все вместе
3) Закрытие потока для освобождения системных ресурсов
4) Обработка ошибок. Стоит учесть, что могут появиться ошибки различного рода, иногда может потребоваться вызов IOException

3. Какие виды потоков существуют?
1) Потоки ввода-вывода
2) Потоки преобразования
3) Потоки последовательного доступа
4) Потоки произвольного доступа
5) Многопоточность
6) Потоки для параллелизма и тд

4. Чем отличается IO от NIO?
IO (input-output) является потокоориентированным, а NIO (new/non-blocking io) — буфер-ориентированным.
Потокоориентированный ввод/вывод подразумевает чтение/запись из потока/в поток одного или нескольких байт поочередно.
Данная информация нигде не кэшируется. Таким образом, невозможно произвольно двигаться по потоку данных вперед или назад.
В NIO данные сначала считываются в буфер, что дает больше гибкости при обработке данных.
Потоки ввода/вывода в Java IO являются блокирующими.
Это значит, что когда в потоке выполнения вызывается read() или write() метод любого класса из пакета java.io.*,
происходит блокировка до тех пор, пока данные не будут считаны или записаны.
Поток выполнения в данный момент не может делать ничего другого.


